apiVersion: apps/v1
kind: Deployment
metadata:
  name: hanami
  labels:
    app: hanami
spec:
  replicas: 1
  selector:
    matchLabels:
      app: hanami
  template:
    metadata:
      labels:
        app: hanami
    spec:
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: hanami-node
                operator: In
                values:
                - "true"
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - hanami
            topologyKey: kubernetes.io/hostname
      containers:

      - name: hanami
        image: {{ .Values.docker.registry }}/hanami:{{ .Values.docker.tag }}
        imagePullPolicy: Always
        env:
        - name: HANAMI_ADMIN_USER_ID
          value: {{ required "user.id is required!" .Values.user.id }}
        - name: HANAMI_ADMIN_USER_NAME
          value: {{ required "user.name is required!" .Values.user.name }}
        - name: HANAMI_ADMIN_PASSPHRASE
          value: {{ required "user.passphrase is required!" .Values.user.passphrase }}
        volumeMounts:
        - name: data-volume
          mountPath: /etc/openhanami/data/
        - name: hanami-config
          mountPath: /etc/openhanami/hanami.conf
          subPath: hanami.conf
        - name: policies-config
          mountPath: /etc/openhanami/policies
          subPath: policies
        - name: token-key
          mountPath: /etc/openhanami/token_key
          subPath: token_key
        - name: hanami-sockets-volume
          mountPath: /tmp/hanami

      - name: tls-termination
        image: nginx:latest
        volumeMounts:
        - name: tls-certs
          mountPath: /etc/nginx/certs
        - name: hanami-nginx-config
          mountPath: /etc/nginx/nginx.conf
          subPath: nginx.conf
        resources:
          limits:
            memory: "128Mi"
            cpu: "500m"

      volumes:
        - name: hanami-config
          configMap:
            name: hanami-config
        - name: policies-config
          configMap:
            name: policies-config
        - name: token-key
          secret:
            secretName: token-key
        - name: hanami-sockets-volume
          emptyDir: {}
        - name: data-volume
          persistentVolumeClaim:
            claimName: hanami-pvc
        - name: tls-certs
          secret:
            secretName: hanami-selfsigned-secret
        - name: hanami-nginx-config
          configMap:
            name: hanami-nginx-config
